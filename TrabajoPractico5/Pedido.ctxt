#BlueJ class context
comment0.target=Pedido
comment1.params=p_renglon
comment1.target=Pedido(Renglon)
comment1.text=\r\n\ Constructor\ de\ Pedido\ (unico\ renglon)\r\n\ \r\n\ @param\ p_renglon\ datos\ del\ renglon\ (p_cant,\ p_item)\r\n
comment2.params=p_renglones
comment2.target=Pedido(java.util.ArrayList)
comment2.text=\r\n\ Constructor\ de\ Pedido\ (multiples\ renglones)\r\n\ \r\n\ @param\ p_renglones\ ArrayList\ de\ renglones\r\n
comment3.params=p_renglones
comment3.target=void\ setRenglones(java.util.ArrayList)
comment3.text=\r\n\ Mutador\ privado\ de\ renglones\r\n\ \r\n\ @param\ p_renglones\ ArrayList\ de\ renglones\r\n
comment4.params=
comment4.target=java.util.ArrayList\ getRenglones()
comment4.text=\r\n\ Observador\ de\ renglones\r\n\ \r\n\ @return\ ArrayList\ de\ renglones\r\n
comment5.params=p_renglon
comment5.target=boolean\ agregarRenglon(Renglon)
comment5.text=\r\n\ Metodo\ para\ agregar\ un\ nuevo\ renglon\r\n\ \r\n\ @param\ p_renglon\ renglon\ a\ agregar\ a\ la\ lista\r\n\ @return\ true\ si\ la\ adicion\ fue\ exitosa;\ de\ lo\ contrario\ Falso\r\n
comment6.params=p_renglon
comment6.target=boolean\ quitarRenglon(Renglon)
comment6.text=\r\n\ Metodo\ para\ eliminar\ un\ renglon\r\n\ \r\n\ @param\ p_renglon\ renglon\ que\ se\ quiere\ eliminar\r\n\ @return\ true\ si\ es\ posible\ la\ eliminacion\ (siempre\ debe\ quedar\ 1)\r\n
comment7.params=
comment7.target=void\ mostrar()
comment7.text=\r\n\ Metodo\ para\ mostrar\ el\ detalle\ del\ pedido\ por\ pantalla\r\n
numComments=8
