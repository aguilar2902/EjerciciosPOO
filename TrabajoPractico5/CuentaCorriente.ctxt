#BlueJ class context
comment0.target=CuentaCorriente
comment0.text=\r\n\ Ejercicio\ 6\ -\ TP5\r\n\ Implementaci\u00F3n\ de\ la\ clase\ CuentaCorriente\r\n\ \r\n\ @author\ Bengochea\ Marcelo\ Jos\u00E9\ De\ Jes\u00FAs\r\n\ @author\ Aguilar\ Jonathan\ Alberto\r\n\ @version\ 1.00\r\n
comment1.params=p_nroCuenta\ p_titular
comment1.target=CuentaCorriente(int,\ Persona)
comment1.text=\r\n\ Constructor\ para\ una\ CuentaCorriente\ sin\ saldo\r\n\ @param\ p_nroCuenta\ nro\ de\ cuenta\r\n\ @param\ p_titular\ objeto\ de\ tipo\ Persona\ a\ asociar\ a\ la\ cuenta\r\n
comment2.params=p_nroCuenta\ p_titular\ p_saldo
comment2.target=CuentaCorriente(int,\ Persona,\ double)
comment2.text=\r\n\ Constructor\ para\ CuentaCorriente\ con\ saldo\ inicial\r\n\ @param\ p_nroCuenta\ nro\ de\ cuenta\r\n\ @param\ p_titular\ objeto\ de\ tipo\ Persona\ a\ asociar\ a\ la\ cuenta\r\n\ @param\ p_saldo\ saldo\ inicial\ a\ cargar\ en\ la\ cuenta\r\n
comment3.params=p_limite
comment3.target=void\ setLimiteDescubierto(double)
comment4.params=
comment4.target=double\ getLimiteDescubierto()
comment5.params=p_importe
comment5.target=boolean\ puedeExtraer(double)
comment5.text=\r\n\ M\u00E9todo\ privado\ que\ informa\ si\ el\ titular\ cumple\ las\ condiciones\r\n\ para\ hacer\ una\ extracci\u00F3n\r\n\ @param\ p_importe\ importe\ que\ el\ titular\ quiere\ extraer\r\n\ @return\ un\ booleano\ que\ define\ si\ se\ cumplen\ las\ condiciones\r\n
comment6.params=p_importe
comment6.target=boolean\ extraer(double)
comment6.text=\r\n\ M\u00E9todo\ p\u00FAblico\ que\ que\ confirma\ la\ extracci\u00F3n\r\n\ @param\ p_importe\ monto\ a\ extraer\r\n\ @return\ si\ se\ llev\u00F3\ a\ cabo\ exitosamente\ (booleano)\r\n
comment7.params=p_importe
comment7.target=java.lang.String\ xQNoPuedoExtraer(double)
comment8.params=
comment8.target=void\ mostrar()
comment8.text=\r\n\ Muestra\ por\ pantalla\ los\ datos\ de\ la\ cuenta\ corriente\ \r\n\ (titular,nro\ cuenta,saldo,\ saldo\ descubierto)\r\n
numComments=9
