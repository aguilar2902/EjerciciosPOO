#BlueJ class context
comment0.target=CajaDeAhorro
comment0.text=\n\ Ejercicio\ 7\n\ Implementaci\u00F3n\ de\ la\ clase\ CajaDeAhorro\n\ \n\ @author\ Bengochea\ Marcelo\ Jos\u00E9\ De\ Jes\u00FAs\n\ @author\ Aguilar\ Jonathan\ Alberto\n\ @version\ 1.00\n
comment1.params=p_nroCuenta\ p_titular
comment1.target=CajaDeAhorro(int,\ Persona)
comment1.text=\n\ Constructor\ para\ Caja\ De\ Ahorro\ sin\ saldo\ ($0.0)\n\ Posee\ un\ l\u00EDmite\ de\ 10\ extracciones\n\ @param\ p_nroCuenta\ n\u00FAmero\ de\ cuenta\ del\ titular\n\ @param\ p_titular\ objeto\ de\ tipo\ Persona\ que\ ser\u00E1\ el\ titular\ \n
comment10.params=
comment10.target=Persona\ getTitular()
comment11.params=p_importe
comment11.target=boolean\ puedeExtraer(double)
comment11.text=\n\ Obtiene\ un\ booleano\ que\ representa\ la\ posibilidad\ de\ extraer\ o\ no\n\ dinero.<br>\n\ (Depende\ de\ poseer\ el\ saldo\ suficiente\ y\ extracciones\ posibles\ disponibles).\n\ @param\ p_importe\ el\ monto\ que\ se\ desea\ extraer\n\ @return\ un\ booleano\ confirmando\ si\ es\ posible\ o\ no\ la\ extracci\u00F3n.\n
comment12.params=p_importe
comment12.target=void\ extraccion(double)
comment12.text=\n\ M\u00E9todo\ privado\ que\ realiza\ la\ extracci\u00F3n\ propiamente\ dicha.\n\ @param\ p_importe\ monto\ de\ dinero\ a\ extraer.\n
comment13.params=p_importe
comment13.target=void\ extraer(double)
comment13.text=\n\ M\u00E9todo\ p\u00FAblico\ que\ evalua\ la\ posibilidad\ de\ hacer\ una\ extracci\u00F3n.<br>\n\ Si\ la\ extracci\u00F3n\ no\ se\ puede\ llevar\ a\ cabo,\ informa\ la\ raz\u00F3n.\n\ @param\ p_importe\ monto\ que\ se\ desea\ extraer\n
comment14.params=p_importe
comment14.target=void\ depositar(double)
comment14.text=\n\ Permite\ la\ carga\ de\ dinero\ al\ saldo\ de\ la\ cuenta\n\ @param\ p_importe\ monto\ de\ dinero\ a\ depositar\n
comment15.params=
comment15.target=void\ mostrar()
comment15.text=\n\ Muestra\ por\ pantalla\ informaci\u00F3n\ de\ la\ caja\ de\ ahorro\ (nro\ cuenta,\ titular,\n\ saldo\ y\ extracciones\ posibles)\n
comment2.params=p_nroCuenta\ p_titular\ p_saldo
comment2.target=CajaDeAhorro(int,\ Persona,\ double)
comment2.text=\n\ Constructor\ para\ instancias\ de\ CajaDeAhorro\ con\ saldo.\n\ Posee\ un\ l\u00EDmite\ de\ 10\ extracciones.\n\ @param\ p_nroCuenta\ n\u00FAmero\ de\ cuenta\ del\ titular\n\ @param\ p_titular\ objeto\ de\ tipo\ Persona\ que\ ser\u00E1\ el\ titular\n\ @param\ p_saldo\ el\ saldo\ inicial\ de\ la\ cuenta\n
comment3.params=p_nroCuenta
comment3.target=void\ setNroCuenta(int)
comment3.text=\n\ @param\ p_nroCuenta\ asigna\ un\ n\u00FAmero\ de\ cuenta\ a\ la\ caja\ de\ ahorro.\n
comment4.params=p_saldo
comment4.target=void\ setSaldo(double)
comment5.params=p_extracciones
comment5.target=void\ setExtraccionesPosibles(int)
comment6.params=p_titular
comment6.target=void\ setTitular(Persona)
comment7.params=
comment7.target=int\ getNroCuenta()
comment7.text=\n\ @return\ el\ nro\ de\ cuenta\ de\ la\ caja\ de\ ahorro\n
comment8.params=
comment8.target=double\ getSaldo()
comment9.params=
comment9.target=int\ getExtraccionesPosibles()
numComments=16
